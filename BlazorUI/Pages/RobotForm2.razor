@page "/robot/add2"

<MudText Typo="Typo.h4" Color="Color.Primary">RobotForm2</MudText>

<MudForm Model="_robot2" @ref="_form" Validation="_robot2Validator.ValidateValue" @bind-IsValid="_success" @bind-Errors="_errors">
    <MudTextField
        @bind-Value="_robot2.CodeName"
        For="@(() => _robot2.CodeName)"
        Immediate="true"
        Label="Code Name"/>
    
    <MudNumericField
        @bind-Value="_robot2.Power"
        For="@(() => _robot2.Power)"
        Label="Power"
        Variant="Variant.Text"/>
</MudForm>


<MudPaper Class="d-flex pa-4 mt-4">
    <MudButton
        Variant="Variant.Filled"
        Color="Color.Primary"
        DisableElevation="true"
        OnClick="@(() => _form!.Validate())">
        Validate
    </MudButton>
    <MudButton
        Variant="Variant.Filled"
        Color="Color.Secondary"
        DisableElevation="true"
        OnClick="@(() => _form!.Reset())" 
        Class="mx-2">
        Reset
    </MudButton>
    
    <MudButton
        Variant="Variant.Filled"
        DisableElevation="true"
        OnClick="@(() => _form!.ResetValidation())">
        Reset Validation
    </MudButton>
    <MudButton
        Variant="Variant.Filled"
        Color="Color.Success"
        OnClick="@(async () => await SubmitForm())"
        Class="ml-auto">
        SubmitForm
    </MudButton>
</MudPaper>

<MudPaper Elevation="2" Class="mt-4 pa-8">
    <MudText Typo="Typo.body1" Color="@(_success ? Color.Success : Color.Error)">
        Success: @_success
    </MudText>
    @foreach (var error in _errors)
    {
        <MudText Typo="Typo.body1" Color="Color.Error">
            @error
        </MudText>
    }
</MudPaper>

@code {

    [Inject]
    ISnackbar? Snackbar { get; set; }

    private Robot2 _robot2 = new();
    private Robot2Validator _robot2Validator = new();

    bool _success;
    string[] _errors = { };
    MudForm? _form;

    private async Task SubmitForm()
    {
        await _form!.Validate();

        if (_form.IsValid)
        {
            Snackbar!.Add("Form Is Submitted!");
        }
    }


}