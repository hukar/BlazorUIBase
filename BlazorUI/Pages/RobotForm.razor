@page "/robot/add"
@using Domain
@using Blazored.FluentValidation

<MudText Class="my-6" Typo="Typo.h3" Color="Color.Secondary">RobotForm : Create Mode</MudText>

<EditForm Model="@Robot" OnValidSubmit="@ValidSubmitHandle" OnInvalidSubmit="@InvalidSubmitHandle">
    <FluentValidationValidator />
    
    <MudGrid>
        <MudItem xs="6">
            <MudCard>
                <MudCardContent>
                    <MudTextField 
                        @bind-Value="@Robot.CodeName" 
                        Label="CodeName" 
                        Variant="Variant.Text" 
                        For="() => Robot.CodeName"/>
                    @if (_weapons is not null)
                    {
                        <MudSelect 
                            Label="Favourite Weapons" 
                            @bind-Value="@Robot.FavouriteWeapon">
                            @foreach (var weapon in _weapons)
                            {
                                <MudSelectItem Value="@weapon">
                                    <img src="@($"images/weapons/weapon-{weapon.Id}.png")" height="14" class="mr-1" /> @weapon.Name
                                </MudSelectItem>
                            }
                        </MudSelect>
                    }
                    @if (_weapons is not null)
                    {
                        <MudSelect
                            T="Weapon"
                            Label="List Secondary Weapons" 
                            MultiSelection="true"
                            @bind-SelectedValues="@Robot.Weapons">
                            @foreach (var weapon in _weapons)
                            {
                                <MudSelectItem Value="@weapon">
                                    <img src="@($"images/weapons/weapon-{weapon.Id}.png")" height="14" class="mr-1" /> @weapon.Name
                                </MudSelectItem>
                            }
                        </MudSelect>
                    }
                </MudCardContent>
                <MudCardActions>
                    <MudButton 
                        Variant="Variant.Filled" 
                        ButtonType="ButtonType.Submit"
                        Color="Color.Secondary">Add Robot</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="6">
            <MudPaper Elevation="2" Class="mud-height-full pa-4">
                <MudText Typo="Typo.h6">Validation Summary</MudText>
                @if (_isSuccess)
                {
                    <MudText Typo="Typo.body1" Color="Color.Success">Validation is successfull</MudText>
                }
                else
                {
                    <MudText Color="Color.Error">
                        <ValidationSummary />
                    </MudText>
                }
            </MudPaper>
        </MudItem>
    </MudGrid>
</EditForm>


@code {
    [Inject]
    public IRobotRepository Repo { get; set; } = default!;
    
    public Robot Robot { get; set; } = new();
    
    IEnumerable<Weapon> _weapons = default!;

    bool _isSuccess = false;

    protected override async Task OnInitializedAsync()
    {
        _weapons = await Repo.GetAllWeapons();
    }

    void ValidSubmitHandle()
    {
        Console.WriteLine("Valid Submit");
        _isSuccess = true;
    }
    
    void InvalidSubmitHandle()
    {
        Console.WriteLine("Invalid Submit");
        _isSuccess = false;
    }
}